{
  "openapi": "3.0.0",
  "info": {
    "title": "Blog Posting API",
    "version": "1.0.0",
    "description": "API documentation for your Blog Posting System."
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1/",
      "description": "Local server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Check health and database connection",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "Health check passed, database connected.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "ok" },
                    "database": { "type": "string", "example": "connected" }
                  }
                },
                "examples": {
                  "Healthy": {
                    "summary": "Healthy response",
                    "value": {
                      "status": "ok",
                      "database": "connected"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Health check failed, database disconnected.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "error" },
                    "database": { "type": "string", "example": "disconnected" },
                    "message": {
                      "type": "string",
                      "example": "Health check failed"
                    }
                  }
                },
                "examples": {
                  "Unhealthy": {
                    "summary": "Database connection failed",
                    "value": {
                      "status": "error",
                      "database": "disconnected",
                      "message": "Health check failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "user@example.com" },
                  "password": { "type": "string", "example": "password123" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "message": {
                      "type": "string",
                      "example": "Invalid password"
                    },
                    "errorSources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": { "type": "string", "example": "" },
                          "message": {
                            "type": "string",
                            "example": "Invalid password"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error: Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "errorSources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": { "type": "string", "example": "" },
                          "message": {
                            "type": "string",
                            "example": "User not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "user@example.com" },
                  "password": { "type": "string", "example": "password123" },
                  "name": { "type": "string", "example": "John Doe" },
                  "role": { "type": "string", "example": "ADMIN" }
                },
                "required": ["email", "password", "name", "role"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error: Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "message": {
                      "type": "string",
                      "example": "User already exists"
                    },
                    "errorSources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": { "type": "string", "example": "" },
                          "message": {
                            "type": "string",
                            "example": "User already exists"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blog": {
      "get": {
        "summary": "Get all blog posts",
        "tags": ["Blog"],
        "responses": {
          "200": {
            "description": "A list of blog posts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Blog"
                  }
                }
              }
            }
          }
        }
      }
    },
    "blog/{id}": {
      "get": {
        "summary": "Get a single blog post by ID",
        "tags": ["Blog"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "A single blog post.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blog"
                }
              }
            }
          },
          "404": {
            "description": "Blog post not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string" }
        }
      },
      "Blog": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "author": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      }
    }
  }
}
